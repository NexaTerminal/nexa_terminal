import React from 'react';
import BaseDocumentPage from '../../../../components/documents/BaseDocumentPage';
import FormField, { ConditionalField } from '../../../../components/forms/FormField';
import { bonusDecisionConfig, getStepFields } from '../../../../config/documents/bonusDecision';
import styles from '../../../../styles/terminal/documents/DocumentGeneration.module.css';

/**
 * Bonus Decision Page
 * Uses the reusable base components and configuration-driven approach
 * This page generates comprehensive decisions for various types of employee bonuses
 */
const BonusDecisionPage = () => {

  /**
   * Custom step content renderer
   * This is the only document-specific logic needed
   */
  const renderStepContent = ({ currentStep, formData, handleInputChange, errors, isGenerating }) => {
    const stepFields = getStepFields(currentStep);
    const stepConfig = bonusDecisionConfig.steps.find(s => s.id === currentStep);

    return (
      <div className={styles['form-section']}>
        <h3>{stepConfig.title}</h3>
        {stepConfig.description && <p>{stepConfig.description}</p>}

        {/* Add informational note for step 1 */}
        {currentStep === 1 && (
          <div className={styles['info-box']} style={{
            backgroundColor: '#e8f4fd',
            border: '1px solid #bee5eb',
            borderRadius: '6px',
            padding: '12px',
            marginBottom: '20px',
            fontSize: '14px'
          }}>
            <strong>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:</strong>
            <ul style={{ margin: '8px 0', paddingLeft: '20px' }}>
              <li>–í–Ω–µ—Å–µ—Ç–µ –≥–∏ –æ—Å–Ω–æ–≤–Ω–∏—Ç–µ –ø–æ–¥–∞—Ç–æ—Ü–∏ –∑–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ—Ç –∑–∞ –∫–æ–≥–æ —Å–µ –¥–æ–Ω–µ—Å—É–≤–∞ –æ–¥–ª—É–∫–∞—Ç–∞</li>
              <li>–ò–º–µ—Ç–æ –∏ –ø–æ–∑–∏—Ü–∏—ò–∞—Ç–∞ –º–æ—Ä–∞ –¥–∞ –æ–¥–≥–æ–≤–∞—Ä–∞–∞—Ç —Å–æ –ø–æ–¥–∞—Ç–æ—Ü–∏—Ç–µ –æ–¥ —Ä–∞–±–æ—Ç–Ω–∏–æ—Ç –¥–æ–≥–æ–≤–æ—Ä</li>
              <li>–î–∞—Ç—É–º–∏—Ç–µ –Ω–∞ –æ–¥–ª—É–∫–∞—Ç–∞ –∏ –≤–ª–µ–≥—É–≤–∞—ö–µ –≤–æ —Å–∏–ª–∞ –º–æ–∂–∞—Ç –¥–∞ –±–∏–¥–∞—Ç —Ä–∞–∑–ª–∏—á–Ω–∏</li>
              <li>–ê–∫–æ –Ω–µ –≤–Ω–µ—Å–µ—Ç–µ –¥–∞—Ç—É–º–∏, –∞–≤—Ç–æ–º–∞—Ç—Å–∫–∏ —ú–µ —Å–µ –∫–æ—Ä–∏—Å—Ç–∏ –¥–µ–Ω–µ—à–Ω–∏–æ—Ç –¥–∞—Ç—É–º</li>
            </ul>
          </div>
        )}

        {/* Add informational note for step 2 */}
        {currentStep === 2 && (
          <div className={styles['info-box']} style={{
            backgroundColor: '#fff3cd',
            border: '1px solid #ffeaa7',
            borderRadius: '6px',
            padding: '12px',
            marginBottom: '20px',
            fontSize: '14px'
          }}>
            <strong>üí∞ –ù–∞–ø–æ–º–µ–Ω–∞ –∑–∞ –±–æ–Ω—É—Å–æ—Ç:</strong>
            <ul style={{ margin: '8px 0', paddingLeft: '20px' }}>
              <li>–ò–∑–±–µ—Ä–µ—Ç–µ —Å–æ–æ–¥–≤–µ—Ç–µ–Ω —Ç–∏–ø –Ω–∞ –±–æ–Ω—É—Å —Å–ø–æ—Ä–µ–¥ –ø—Ä–∏—Ä–æ–¥–∞—Ç–∞ –Ω–∞ –Ω–∞–≥—Ä–∞–¥—É–≤–∞—ö–µ—Ç–æ</li>
              <li>–í–Ω–µ—Å–µ—Ç–µ –≥–æ –Ω–µ—Ç–æ –∏–∑–Ω–æ—Å–æ—Ç –Ω–∞ –±–æ–Ω—É—Å–æ—Ç –≤–æ –º–∞–∫–µ–¥–æ–Ω—Å–∫–∏ –¥–µ–Ω–∞—Ä–∏</li>
              <li>–î–µ—Ç–∞–ª–Ω–æ –æ–ø–∏—à–µ—Ç–µ —ò–∞ –ø—Ä–∏—á–∏–Ω–∞—Ç–∞ –∑–∞ –ø–æ–≥–æ–ª–µ–º–∞ —Ç—Ä–∞–Ω—Å–ø–∞—Ä–µ–Ω—Ç–Ω–æ—Å—Ç</li>
              <li>–î–æ–∫—É–º–µ–Ω—Ç–æ—Ç —Å–µ –±–∞–∑–∏—Ä–∞ –Ω–∞ —á–ª–µ–Ω 105 –æ–¥ –ó–∞–∫–æ–Ω–æ—Ç –∑–∞ —Ä–∞–±–æ—Ç–Ω–∏—Ç–µ –æ–¥–Ω–æ—Å–∏</li>
            </ul>
          </div>
        )}

        {/* Add informational note for step 3 */}
        {currentStep === 3 && (
          <div className={styles['info-box']} style={{
            backgroundColor: '#f0f9ff',
            border: '1px solid #bae6fd',
            borderRadius: '6px',
            padding: '12px',
            marginBottom: '20px',
            fontSize: '14px'
          }}>
            <strong>üìã –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª–Ω–∏ —É—Å–ª–æ–≤–∏:</strong>
            <ul style={{ margin: '8px 0', paddingLeft: '20px' }}>
              <li>–°–∏—Ç–µ –ø–æ–ª–∏—ö–∞ –≤–æ –æ–≤–æ—ò —á–µ–∫–æ—Ä —Å–µ –æ–ø—Ü–∏–æ–Ω–∞–ª–Ω–∏</li>
              <li>–ö—Ä–∏—Ç–µ—Ä–∏—É–º–∏—Ç–µ –ø–æ–º–∞–≥–∞–∞—Ç –≤–æ –≤–æ—Å–ø–æ—Å—Ç–∞–≤—É–≤–∞—ö–µ –Ω–∞ —ò–∞—Å–Ω–∏ —Å—Ç–∞–Ω–¥–∞—Ä–¥–∏</li>
              <li>–ü–µ—Ä–∏–æ–¥–æ—Ç –¥–µ—Ñ–∏–Ω–∏—Ä–∞ –∑–∞ –∫–æ–µ –≤—Ä–µ–º–µ —Å–µ –æ–¥–Ω–µ—Å—É–≤–∞ –±–æ–Ω—É—Å–æ—Ç</li>
              <li>–†–µ–¥–æ–≤–Ω–∏—Ç–µ –±–æ–Ω—É—Å–∏ –≤–ª–∏—ò–∞–∞—Ç –Ω–∞ –∏–¥–Ω–∏—Ç–µ –æ—á–µ–∫—É–≤–∞—ö–∞ –Ω–∞ –≤—Ä–∞–±–æ—Ç–µ–Ω–∏—Ç–µ</li>
            </ul>
          </div>
        )}

        {stepFields.map(field => (
          <React.Fragment key={field.name}>
            {/* Regular fields */}
            {!field.condition && (
              <FormField
                field={field}
                value={formData[field.name]}
                onChange={handleInputChange}
                error={errors[field.name]}
                disabled={isGenerating}
                formData={formData}
              />
            )}

            {/* Conditional fields (if any are added later) */}
            {field.condition && (
              <ConditionalField condition={field.condition} formData={formData}>
                <FormField
                  field={field}
                  value={formData[field.name]}
                  onChange={handleInputChange}
                  error={errors[field.name]}
                  disabled={isGenerating}
                  formData={formData}
                />
              </ConditionalField>
            )}
          </React.Fragment>
        ))}
      </div>
    );
  };

  return (
    <BaseDocumentPage
      config={bonusDecisionConfig}
      renderStepContent={renderStepContent}
      title="–û–¥–ª—É–∫–∞ –∑–∞ –±–æ–Ω—É—Å"
      description="–ü–æ–ø–æ–ª–Ω–µ—Ç–µ –≥–∏ –ø–æ—Ç—Ä–µ–±–Ω–∏—Ç–µ –ø–æ–¥–∞—Ç–æ—Ü–∏ –∑–∞ –∏–∑–¥–∞–≤–∞—ö–µ –æ–¥–ª—É–∫–∞ –∑–∞ –¥–æ–¥–µ–ª—É–≤–∞—ö–µ –±–æ–Ω—É—Å –¥–æ –≤—Ä–∞–±–æ—Ç–µ–Ω —Å–ø–æ—Ä–µ–¥ —á–ª–µ–Ω 105 –æ–¥ –ó–∞–∫–æ–Ω–æ—Ç –∑–∞ —Ä–∞–±–æ—Ç–Ω–∏ –æ–¥–Ω–æ—Å–∏"
    />
  );
};

export default BonusDecisionPage;